#!/usr/bin/env python3
import parser.parse as p
import abstract as ab

p.table = {
	"\x19 :=  ● exp \x18": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": "\x19 := exp ● \x18",
		"a": "exp := a ● IFF a",
		"b": "a := b ● IF b",
		"c": "b := c ● OR c",
		"d": "c := d ● XOR d",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"\x19 := exp ● \x18": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": None,
		"PROP": None,
		"BOOL": None,
		"\x18": "accept",
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"exp := a ● IFF a": {
		"IFF": "exp := a IFF ● a",
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('exp', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('exp', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"exp := a IFF ● a": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": "exp := a IFF a ● ",
		"b": "a := b ● IF b",
		"c": "b := c ● OR c",
		"d": "c := d ● XOR d",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"exp := a IFF a ● ": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('exp', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('exp', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"a := b ● IF b": {
		"IFF": ('a', 1),
		"IF": "a := b IF ● b",
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('a', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('a', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"a := b IF ● b": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": None,
		"b": "a := b IF b ● ",
		"c": "b := c ● OR c",
		"d": "c := d ● XOR d",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"a := b IF b ● ": {
		"IFF": ('a', 3),
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('a', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('a', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"b := c ● OR c": {
		"IFF": ('b', 1),
		"IF": ('b', 1),
		"OR": "b := c OR ● c",
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('b', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('b', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"b := c OR ● c": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": None,
		"b": None,
		"c": "b := c OR c ● ",
		"d": "c := d ● XOR d",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"b := c OR c ● ": {
		"IFF": ('b', 3),
		"IF": ('b', 3),
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('b', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('b', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"c := d ● XOR d": {
		"IFF": ('c', 1),
		"IF": ('c', 1),
		"OR": ('c', 1),
		"XOR": "c := d XOR ● d",
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('c', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('c', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"c := d XOR ● d": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": "c := d XOR d ● ",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"c := d XOR d ● ": {
		"IFF": ('c', 3),
		"IF": ('c', 3),
		"OR": ('c', 3),
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('c', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('c', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"d := e ● AND e": {
		"IFF": ('d', 1),
		"IF": ('d', 1),
		"OR": ('d', 1),
		"XOR": ('d', 1),
		"AND": "d := e AND ● e",
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('d', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('d', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"d := e AND ● e": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": "d := e AND e ● ",
		"term": "e := term ● ",
		"\x19": None,
	},
	"d := e AND e ● ": {
		"IFF": ('d', 3),
		"IF": ('d', 3),
		"OR": ('d', 3),
		"XOR": ('d', 3),
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('d', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('d', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"e := term ● ": {
		"IFF": ('e', 1),
		"IF": ('e', 1),
		"OR": ('e', 1),
		"XOR": ('e', 1),
		"AND": ('e', 1),
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('e', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('e', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"e := NOT ● term": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": "e := NOT term ● ",
		"\x19": None,
	},
	"e := NOT term ● ": {
		"IFF": ('e', 2),
		"IF": ('e', 2),
		"OR": ('e', 2),
		"XOR": ('e', 2),
		"AND": ('e', 2),
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('e', 2),
		"PROP": None,
		"BOOL": None,
		"\x18": ('e', 2),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"term := LPAREN ● exp RPAREN": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": "e := NOT ● term",
		"LPAREN": "term := LPAREN ● exp RPAREN",
		"RPAREN": None,
		"PROP": "term := PROP ● ",
		"BOOL": "term := BOOL ● ",
		"\x18": None,
		"exp": "term := LPAREN exp ● RPAREN",
		"a": "exp := a ● IFF a",
		"b": "a := b ● IF b",
		"c": "b := c ● OR c",
		"d": "c := d ● XOR d",
		"e": "d := e ● AND e",
		"term": "e := term ● ",
		"\x19": None,
	},
	"term := LPAREN exp ● RPAREN": {
		"IFF": None,
		"IF": None,
		"OR": None,
		"XOR": None,
		"AND": None,
		"NOT": None,
		"LPAREN": None,
		"RPAREN": "term := LPAREN exp RPAREN ● ",
		"PROP": None,
		"BOOL": None,
		"\x18": None,
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"term := LPAREN exp RPAREN ● ": {
		"IFF": ('term', 3),
		"IF": ('term', 3),
		"OR": ('term', 3),
		"XOR": ('term', 3),
		"AND": ('term', 3),
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('term', 3),
		"PROP": None,
		"BOOL": None,
		"\x18": ('term', 3),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"term := PROP ● ": {
		"IFF": ('term', 1),
		"IF": ('term', 1),
		"OR": ('term', 1),
		"XOR": ('term', 1),
		"AND": ('term', 1),
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('term', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('term', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
	"term := BOOL ● ": {
		"IFF": ('term', 1),
		"IF": ('term', 1),
		"OR": ('term', 1),
		"XOR": ('term', 1),
		"AND": ('term', 1),
		"NOT": None,
		"LPAREN": None,
		"RPAREN": ('term', 1),
		"PROP": None,
		"BOOL": None,
		"\x18": ('term', 1),
		"exp": None,
		"a": None,
		"b": None,
		"c": None,
		"d": None,
		"e": None,
		"term": None,
		"\x19": None,
	},
}
p.start = list(p.table.keys())[0]
def action1():
    p.semstack = [ab.Iff(p.semstack[1], p.semstack[0])] + p.semstack[2:]

def action2():
    p.semstack = [ab.If(p.semstack[1], p.semstack[0])] + p.semstack[2:]

def action3():
    p.semstack = [ab.Or(p.semstack[1], p.semstack[0])] + p.semstack[2:]

def action4():
    p.semstack = [ab.Xor(p.semstack[1], p.semstack[0])] + p.semstack[2:]

def action5():
    p.semstack = [ab.And(p.semstack[1], p.semstack[0])] + p.semstack[2:]

def action6():
    p.semstack = [ab.Not(p.semstack[0])] + p.semstack[1:]

def action7():
    p.semstack = [ab.makeProp(p.currentToken)] + p.semstack

def action8():
    p.semstack = [ab.Bool(p.currentToken == "_T")] + p.semstack

p.actions = {
	"exp := a IFF a ● ": action1,
	"a := b IF b ● ": action2,
	"b := c OR c ● ": action3,
	"c := d XOR d ● ": action4,
	"d := e AND e ● ": action5,
	"e := NOT term ● ": action6,
	"term := PROP ● ": action7,
	"term := BOOL ● ": action8,
}
p.errorSets = {
	'fexp': {'\x18', 'RPAREN'},
	'exp': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fa': {'RPAREN', '\x18', 'IFF'},
	'a': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fb': {'\x18', 'RPAREN', 'IF', 'IFF'},
	'b': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fc': {'IFF', 'OR', 'RPAREN', '\x18', 'IF'},
	'c': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fd': {'IFF', 'XOR', 'OR', 'RPAREN', '\x18', 'IF'},
	'd': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fe': {'AND', 'IFF', 'XOR', 'OR', 'RPAREN', '\x18', 'IF'},
	'e': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'fterm': {'AND', 'IFF', 'XOR', 'OR', 'RPAREN', '\x18', 'IF'},
	'term': {'LPAREN', 'PROP', 'BOOL'},
	'f\x19': {None},
	'\x19': {'LPAREN', 'NOT', 'PROP', 'BOOL'},
	'IFF': {'IFF'},
	'IF': {'IF'},
	'OR': {'OR'},
	'XOR': {'XOR'},
	'AND': {'AND'},
	'NOT': {'NOT'},
	'LPAREN': {'LPAREN'},
	'RPAREN': {'RPAREN'},
	'PROP': {'PROP'},
	'BOOL': {'BOOL'},
	'\x18': {'\x18'},
}
